AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  StageName:
    Type: String
    Description: Stage name for the API Gateway deployment
    Default: $default

############################################
# Globals
# these are applied to all functions
############################################

Globals:
  Function:
    Runtime: nodejs20.x
    Architectures:
      - x86_64
    Environment:
      Variables:
        TABLE_NAME: !Ref ConnectionTable

Resources:

  ##########################################
  # Lambda functions for websocket events
  ##########################################

  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/
      Handler: onconnect.handler
      Timeout: 5
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionTable
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: 'es2022'
        Sourcemap: false
        EntryPoints:
          - onconnect.ts

  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/
      Handler: ondisconnect.handler
      Timeout: 5
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionTable
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: 'es2022'
        Sourcemap: false
        EntryPoints:
          - ondisconnect.ts

  SendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/
      Handler: sendmessage.handler
      Timeout: 5
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionTable
        - Statement:
          - Effect: Allow
            Action:
              - 'execute-api:ManageConnections'
            Resource:
              - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketApi}/*'
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: 'es2022'
        Sourcemap: false
        EntryPoints:
          - sendmessage.ts

  ##########################################
  # DynamoDB table
  # to store WebSocket connections
  # and their metadata
  ##########################################

  ConnectionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: connectionId
          AttributeType: S
      KeySchema:
        - AttributeName: connectionId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST


  #########################################
  # API Gateway resources
  #########################################

  WebSocketApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: WebSocketApi
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"

  ConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations

  DisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations

  SendMessageIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations

  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Sub integrations/${ConnectIntegration}

  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Sub integrations/${DisconnectIntegration}

  SendMessageRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: sendmessage
      AuthorizationType: NONE
      OperationName: SendMessageRoute
      Target: !Sub integrations/${SendMessageIntegration}

  SendMessageRouteResponse:
    Type: AWS::ApiGatewayV2::RouteResponse
    Properties:
      ApiId: !Ref WebSocketApi
      RouteId: !Ref SendMessageRoute
      RouteResponseKey: $default

  #########################################
  # API Gateway permissions
  #########################################

  ConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - ConnectRoute
    Properties:
      FunctionName: !Ref OnConnectFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com

  DisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - DisconnectRoute
    Properties:
      FunctionName: !Ref OnDisconnectFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com

  SendMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SendMessageRoute
    Properties:
      FunctionName: !Ref SendMessageFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com

  #########################################
  # API Gateway stage and deployment
  #########################################

  ApiDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ConnectRoute
      - DisconnectRoute
      - SendMessageRoute
    Properties:
      ApiId: !Ref WebSocketApi

  ApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref WebSocketApi
      DeploymentId: !Ref ApiDeployment
      StageName: !Ref StageName


############################################
# Outputs
############################################

Outputs:
  WebSocketURI:
    Description: "The WSS Protocol URI to connect to"
    Value: !Sub "wss://${WebSocketApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}"
  
  ConnectionTableArn:
    Description: "Connections table ARN"
    Value: !GetAtt ConnectionTable.Arn
